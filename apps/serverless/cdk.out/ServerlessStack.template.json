{
  "Resources": {
    "MeetingsTable00BD45B4": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MeetingsTable/Resource"
      }
    },
    "MyMeetingsApiApiLogsRole59BC4BE3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/ApiLogsRole/Resource"
      }
    },
    "MyMeetingsApi25637FD5": {
      "Type": "AWS::AppSync::GraphQLApi",
      "Properties": {
        "AuthenticationType": "API_KEY",
        "Name": "my-meetings-api",
        "LogConfig": {
          "CloudWatchLogsRoleArn": {
            "Fn::GetAtt": [
              "MyMeetingsApiApiLogsRole59BC4BE3",
              "Arn"
            ]
          },
          "FieldLogLevel": "ALL"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/Resource"
      }
    },
    "MyMeetingsApiSchema44AF75E6": {
      "Type": "AWS::AppSync::GraphQLSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "MyMeetingsApi25637FD5",
            "ApiId"
          ]
        },
        "Definition": "type Meeting {\n    id: ID\n    name: String!\n    day: Int\n    slug: String\n    time: String\n    end_time: String\n    group: String\n    notes: String\n    updated: String\n    url: String\n    types: [String]\n    address: String\n    city: String\n    state: String\n    postal_code: String\n    country: String\n    approximate: Boolean\n    rating: Int\n    reviews: [String]\n}\n\ntype Query {\n    listMeetings: [Meeting]\n    getMeetingById(meetingId: ID!): Meeting\n}\n\ntype Mutation {\n    createMeeting(meeting: MeetingInput!): Meeting\n    updateMeeting(meeting: UpdateMeetingInput!): Meeting\n}\n\ninput MeetingInput {\n    name: String!\n    day: Int\n    slug: String\n    time: String\n    end_time: String\n    group: String\n    notes: String\n    url: String\n    address: String\n    city: String\n    state: String\n    postal_code: String\n    country: String\n    approximate: Boolean\n    rating: Int\n}\n\ninput UpdateMeetingInput {\n    id: ID!\n    name: String\n    day: Int\n    slug: String\n    time: String\n    end_time: String\n    group: String\n    notes: String\n    url: String\n    address: String\n    city: String\n    state: String\n    postal_code: String\n    country: String\n    approximate: Boolean\n    rating: Int\n}\n\ntype Subscription {\n    onUpdateMeeting: Meeting @aws_subscribe(mutations: [\"updateMeeting\"])\n}"
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/Schema"
      }
    },
    "MyMeetingsApiMyMeetingsAPIkeyApiKeyF90CD75C": {
      "Type": "AWS::AppSync::ApiKey",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "MyMeetingsApi25637FD5",
            "ApiId"
          ]
        },
        "Expires": 1672782577
      },
      "DependsOn": [
        "MyMeetingsApiSchema44AF75E6"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/My Meetings API keyApiKey"
      }
    },
    "MyMeetingsApilistMeetingsDataSourceServiceRole1165167A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/listMeetingsDataSource/ServiceRole/Resource"
      }
    },
    "MyMeetingsApilistMeetingsDataSourceServiceRoleDefaultPolicy4C99BFC6": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "listMeetingsHandler2971AA98",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MyMeetingsApilistMeetingsDataSourceServiceRoleDefaultPolicy4C99BFC6",
        "Roles": [
          {
            "Ref": "MyMeetingsApilistMeetingsDataSourceServiceRole1165167A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/listMeetingsDataSource/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "MyMeetingsApilistMeetingsDataSource9675F948": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "MyMeetingsApi25637FD5",
            "ApiId"
          ]
        },
        "Name": "listMeetingsDataSource",
        "Type": "AWS_LAMBDA",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "listMeetingsHandler2971AA98",
              "Arn"
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "MyMeetingsApilistMeetingsDataSourceServiceRole1165167A",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/listMeetingsDataSource/Resource"
      }
    },
    "MyMeetingsApilistMeetingsDataSourceQuerylistMeetingsResolver27FE80A9": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "MyMeetingsApi25637FD5",
            "ApiId"
          ]
        },
        "FieldName": "listMeetings",
        "TypeName": "Query",
        "DataSourceName": "listMeetingsDataSource",
        "Kind": "UNIT"
      },
      "DependsOn": [
        "MyMeetingsApilistMeetingsDataSource9675F948",
        "MyMeetingsApiSchema44AF75E6"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/listMeetingsDataSource/QuerylistMeetingsResolver/Resource"
      }
    },
    "MyMeetingsApigetMeetingByIdDataSourceServiceRoleE6A27CA7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/getMeetingByIdDataSource/ServiceRole/Resource"
      }
    },
    "MyMeetingsApigetMeetingByIdDataSourceServiceRoleDefaultPolicy7830863D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "getMeetingByIdHandler01C448F2",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MyMeetingsApigetMeetingByIdDataSourceServiceRoleDefaultPolicy7830863D",
        "Roles": [
          {
            "Ref": "MyMeetingsApigetMeetingByIdDataSourceServiceRoleE6A27CA7"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/getMeetingByIdDataSource/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "MyMeetingsApigetMeetingByIdDataSourceE6794DAF": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "MyMeetingsApi25637FD5",
            "ApiId"
          ]
        },
        "Name": "getMeetingByIdDataSource",
        "Type": "AWS_LAMBDA",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "getMeetingByIdHandler01C448F2",
              "Arn"
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "MyMeetingsApigetMeetingByIdDataSourceServiceRoleE6A27CA7",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/getMeetingByIdDataSource/Resource"
      }
    },
    "MyMeetingsApigetMeetingByIdDataSourceQuerygetMeetingByIdResolverBAE3D682": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "MyMeetingsApi25637FD5",
            "ApiId"
          ]
        },
        "FieldName": "getMeetingById",
        "TypeName": "Query",
        "DataSourceName": "getMeetingByIdDataSource",
        "Kind": "UNIT"
      },
      "DependsOn": [
        "MyMeetingsApigetMeetingByIdDataSourceE6794DAF",
        "MyMeetingsApiSchema44AF75E6"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/getMeetingByIdDataSource/QuerygetMeetingByIdResolver/Resource"
      }
    },
    "MyMeetingsApicreateMeetingDataSourceServiceRoleF122B7C8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/createMeetingDataSource/ServiceRole/Resource"
      }
    },
    "MyMeetingsApicreateMeetingDataSourceServiceRoleDefaultPolicyE226E398": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "createMeetingHandler1D3A3EB5",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MyMeetingsApicreateMeetingDataSourceServiceRoleDefaultPolicyE226E398",
        "Roles": [
          {
            "Ref": "MyMeetingsApicreateMeetingDataSourceServiceRoleF122B7C8"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/createMeetingDataSource/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "MyMeetingsApicreateMeetingDataSourceFE4981BC": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "MyMeetingsApi25637FD5",
            "ApiId"
          ]
        },
        "Name": "createMeetingDataSource",
        "Type": "AWS_LAMBDA",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "createMeetingHandler1D3A3EB5",
              "Arn"
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "MyMeetingsApicreateMeetingDataSourceServiceRoleF122B7C8",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/createMeetingDataSource/Resource"
      }
    },
    "MyMeetingsApicreateMeetingDataSourceMutationcreateMeetingResolver82EFFFF3": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "MyMeetingsApi25637FD5",
            "ApiId"
          ]
        },
        "FieldName": "createMeeting",
        "TypeName": "Mutation",
        "DataSourceName": "createMeetingDataSource",
        "Kind": "UNIT"
      },
      "DependsOn": [
        "MyMeetingsApicreateMeetingDataSourceFE4981BC",
        "MyMeetingsApiSchema44AF75E6"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/createMeetingDataSource/MutationcreateMeetingResolver/Resource"
      }
    },
    "MyMeetingsApiupdateMeetingDataSourceServiceRole49F42924": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/updateMeetingDataSource/ServiceRole/Resource"
      }
    },
    "MyMeetingsApiupdateMeetingDataSourceServiceRoleDefaultPolicy3B836406": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "updateMeetingHandler5AE61427",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MyMeetingsApiupdateMeetingDataSourceServiceRoleDefaultPolicy3B836406",
        "Roles": [
          {
            "Ref": "MyMeetingsApiupdateMeetingDataSourceServiceRole49F42924"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/updateMeetingDataSource/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "MyMeetingsApiupdateMeetingDataSourceBB5777D2": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "MyMeetingsApi25637FD5",
            "ApiId"
          ]
        },
        "Name": "updateMeetingDataSource",
        "Type": "AWS_LAMBDA",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "updateMeetingHandler5AE61427",
              "Arn"
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "MyMeetingsApiupdateMeetingDataSourceServiceRole49F42924",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/updateMeetingDataSource/Resource"
      }
    },
    "MyMeetingsApiupdateMeetingDataSourceMutationupdateMeetingResolverFA66C9D4": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "MyMeetingsApi25637FD5",
            "ApiId"
          ]
        },
        "FieldName": "updateMeeting",
        "TypeName": "Mutation",
        "DataSourceName": "updateMeetingDataSource",
        "Kind": "UNIT"
      },
      "DependsOn": [
        "MyMeetingsApiSchema44AF75E6",
        "MyMeetingsApiupdateMeetingDataSourceBB5777D2"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/MyMeetingsApi/updateMeetingDataSource/MutationupdateMeetingResolver/Resource"
      }
    },
    "listMeetingsHandlerServiceRole7CB6CF3B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/listMeetingsHandler/ServiceRole/Resource"
      }
    },
    "listMeetingsHandlerServiceRoleDefaultPolicy1E42BC84": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MeetingsTable00BD45B4",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "listMeetingsHandlerServiceRoleDefaultPolicy1E42BC84",
        "Roles": [
          {
            "Ref": "listMeetingsHandlerServiceRole7CB6CF3B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/listMeetingsHandler/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "listMeetingsHandler2971AA98": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719S3BucketEA66D9EA"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719S3VersionKeyCE89FD8C"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719S3VersionKeyCE89FD8C"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "listMeetingsHandlerServiceRole7CB6CF3B",
            "Arn"
          ]
        },
        "Architectures": [
          "arm64"
        ],
        "Environment": {
          "Variables": {
            "MEETINGS_TABLE": {
              "Ref": "MeetingsTable00BD45B4"
            }
          }
        },
        "Handler": "listMeetings.handler",
        "MemorySize": 1024,
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "listMeetingsHandlerServiceRoleDefaultPolicy1E42BC84",
        "listMeetingsHandlerServiceRole7CB6CF3B"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/listMeetingsHandler/Resource",
        "aws:asset:path": "asset.32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getMeetingByIdHandlerServiceRoleEA79C630": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/getMeetingByIdHandler/ServiceRole/Resource"
      }
    },
    "getMeetingByIdHandlerServiceRoleDefaultPolicy37516F0D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MeetingsTable00BD45B4",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getMeetingByIdHandlerServiceRoleDefaultPolicy37516F0D",
        "Roles": [
          {
            "Ref": "getMeetingByIdHandlerServiceRoleEA79C630"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/getMeetingByIdHandler/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getMeetingByIdHandler01C448F2": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719S3BucketEA66D9EA"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719S3VersionKeyCE89FD8C"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719S3VersionKeyCE89FD8C"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getMeetingByIdHandlerServiceRoleEA79C630",
            "Arn"
          ]
        },
        "Architectures": [
          "arm64"
        ],
        "Environment": {
          "Variables": {
            "MEETINGS_TABLE": {
              "Ref": "MeetingsTable00BD45B4"
            }
          }
        },
        "Handler": "getMeetingById.handler",
        "MemorySize": 1024,
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "getMeetingByIdHandlerServiceRoleDefaultPolicy37516F0D",
        "getMeetingByIdHandlerServiceRoleEA79C630"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/getMeetingByIdHandler/Resource",
        "aws:asset:path": "asset.32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "createMeetingHandlerServiceRole42E3C181": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/createMeetingHandler/ServiceRole/Resource"
      }
    },
    "createMeetingHandlerServiceRoleDefaultPolicyC9979B0F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MeetingsTable00BD45B4",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "createMeetingHandlerServiceRoleDefaultPolicyC9979B0F",
        "Roles": [
          {
            "Ref": "createMeetingHandlerServiceRole42E3C181"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/createMeetingHandler/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "createMeetingHandler1D3A3EB5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719S3BucketEA66D9EA"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719S3VersionKeyCE89FD8C"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719S3VersionKeyCE89FD8C"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "createMeetingHandlerServiceRole42E3C181",
            "Arn"
          ]
        },
        "Architectures": [
          "arm64"
        ],
        "Environment": {
          "Variables": {
            "MEETINGS_TABLE": {
              "Ref": "MeetingsTable00BD45B4"
            }
          }
        },
        "Handler": "createMeeting.handler",
        "MemorySize": 1024,
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "createMeetingHandlerServiceRoleDefaultPolicyC9979B0F",
        "createMeetingHandlerServiceRole42E3C181"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/createMeetingHandler/Resource",
        "aws:asset:path": "asset.32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "updateMeetingHandlerServiceRole1A2509D4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/updateMeetingHandler/ServiceRole/Resource"
      }
    },
    "updateMeetingHandlerServiceRoleDefaultPolicy3BEBD922": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MeetingsTable00BD45B4",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "updateMeetingHandlerServiceRoleDefaultPolicy3BEBD922",
        "Roles": [
          {
            "Ref": "updateMeetingHandlerServiceRole1A2509D4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/updateMeetingHandler/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "updateMeetingHandler5AE61427": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters37aa2ce16d74f8fc3c02e642146e1eb5a85d73a89a5ea808444d5b0c3cddf44dS3Bucket0BD0032B"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters37aa2ce16d74f8fc3c02e642146e1eb5a85d73a89a5ea808444d5b0c3cddf44dS3VersionKey2D10D19F"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters37aa2ce16d74f8fc3c02e642146e1eb5a85d73a89a5ea808444d5b0c3cddf44dS3VersionKey2D10D19F"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "updateMeetingHandlerServiceRole1A2509D4",
            "Arn"
          ]
        },
        "Architectures": [
          "arm64"
        ],
        "Environment": {
          "Variables": {
            "MEETINGS_TABLE": {
              "Ref": "MeetingsTable00BD45B4"
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "updateMeetingHandlerServiceRoleDefaultPolicy3BEBD922",
        "updateMeetingHandlerServiceRole1A2509D4"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/updateMeetingHandler/Resource",
        "aws:asset:path": "asset.37aa2ce16d74f8fc3c02e642146e1eb5a85d73a89a5ea808444d5b0c3cddf44d",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VQS07DMBA9S/fOlKgSbGmLYEGFSsIFJvbQOontYDtFkZW7Y7sQYPU+858Sys0d3Kzu8dMVXHTrwI0lCLVH3rGKnBktJ7Z1jnz0TlKf2N5o5+3IPdu/6yNaVOTJJrHkRx6zhPTS6Jml3kFMGpURDYQ3bPqckkkMD4ObNIfwZHE4f/TbQaZoVq+H/6rmZ1KYjOg/08QOqBqBD+ixXkb/UWmj/vK7XeIzk6ggVOa6Rcaj6SWf8kGZzazPjSE8jpqnM1Lsh8/MbQpMP3GQXxM17Ebekd+ho+/aQhtBrYOXDEvtzJIPrVtfytv4fihXrZOysKP2UhFUV/wCzej9vZoBAAA="
      },
      "Metadata": {
        "aws:cdk:path": "ServerlessStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "AssetParameters32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719S3BucketEA66D9EA": {
      "Type": "String",
      "Description": "S3 bucket for asset \"32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719\""
    },
    "AssetParameters32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719S3VersionKeyCE89FD8C": {
      "Type": "String",
      "Description": "S3 key for asset version \"32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719\""
    },
    "AssetParameters32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719ArtifactHashF5FFEAB2": {
      "Type": "String",
      "Description": "Artifact hash for asset \"32a993ec622667ab238786abb415c90fc3b3cb9ddde1935fb2fa1f260ad64719\""
    },
    "AssetParameters37aa2ce16d74f8fc3c02e642146e1eb5a85d73a89a5ea808444d5b0c3cddf44dS3Bucket0BD0032B": {
      "Type": "String",
      "Description": "S3 bucket for asset \"37aa2ce16d74f8fc3c02e642146e1eb5a85d73a89a5ea808444d5b0c3cddf44d\""
    },
    "AssetParameters37aa2ce16d74f8fc3c02e642146e1eb5a85d73a89a5ea808444d5b0c3cddf44dS3VersionKey2D10D19F": {
      "Type": "String",
      "Description": "S3 key for asset version \"37aa2ce16d74f8fc3c02e642146e1eb5a85d73a89a5ea808444d5b0c3cddf44d\""
    },
    "AssetParameters37aa2ce16d74f8fc3c02e642146e1eb5a85d73a89a5ea808444d5b0c3cddf44dArtifactHash573B1CD3": {
      "Type": "String",
      "Description": "Artifact hash for asset \"37aa2ce16d74f8fc3c02e642146e1eb5a85d73a89a5ea808444d5b0c3cddf44d\""
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}